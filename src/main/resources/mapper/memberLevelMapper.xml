<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 命名空间namespace对应接口名称-->
<mapper namespace="com.memberSystem.mapper.memberLevelMapper">
<!--        查询全部数据-->
        <resultMap  id="memberLevelMap" type="com.memberSystem.entity.memberLevel">
                <id property="memberId" column="member_id"></id>
                <result property="levelName" column="level_name"></result>
                <result property="expDemandStart" column="exp_demand_start"></result>
                <result property="expDemandEnd" column="exp_demand_end"></result>
                <result property="isShow" column="is_show"></result>
                <result property="background" column="background"></result>
                <result property="avatar" column="avatar"></result>
                <result property="isDefault" column="isDefault"></result>
                <result property="createId" column="create_id"></result>
                <result property="createTime" column="create_time"></result>
                <result property="updateId" column="update_id"></result>
                <result property="updateTime" column="update_time"></result>
                <result property="delFlag" column="del_flag"></result>
                <collection property="memberLevelCredentials" ofType="com.memberSystem.entity.memberLevelCredential">
                        <id property="credentialId" column="credential_id" ></id>
                        <result property="credentialName" column="credential_name" ></result>
                        <result property="isVip" column="is_vip" ></result>
                </collection>
        </resultMap>
        <select id="findAll" resultMap="memberLevelMap" >
                SELECT A.member_id,level_name,exp_demand_start,exp_demand_end,A.is_show,background,A.avatar,is_default,A.create_id,C.credential_id,C.credential_name,C.is_vip
                FROM (select * from member_system.member_level limit #{pageNum},#{pageSize}) as A
                inner join member_system.member_level_m_c AS B
                on A.member_id=B.member_id
                inner join member_system.member_level_credentials AS C
                on B.credential_id=C.credential_id
        </select>
<!--        关键词查询-->
        <select id="findByKey" resultMap="memberLevelMap" >
                SELECT A.member_id,level_name,exp_demand_start,exp_demand_end,A.is_show,background,A.avatar,is_default,A.create_id,C.credential_id,C.credential_name,C.is_vip
                FROM (select * from member_system.member_level limit #{pageNum},#{pageSize}) as A
                inner join member_system.member_level_m_c AS B
                on A.member_id=B.member_id
                inner join member_system.member_level_credentials AS C
                on B.credential_id=C.credential_id
                <where>
                        A.member_id like '%${keyWord}%' or
                        level_name like '%${keyWord}%' or
                        exp_demand_start like '%${keyWord}%' or
                        exp_demand_end like '%${keyWord}%' or
                        A.create_id like '%${keyWord}%' or
                        C.credential_name like '%${keyWord}%'
                </where>

        </select>
<!--        查询单个用户-->
        <select id="memberLevelGet" resultMap="memberLevelMap">
                SELECT A.member_id,level_name,exp_demand_start,exp_demand_end,A.is_show,background,A.avatar,is_default,C.credential_id
                FROM member_system.member_level as A
                inner join member_system.member_level_m_c AS B
                on A.member_id=B.member_id
                inner join member_system.member_level_credentials AS C
                on B.credential_id=C.credential_id
                where A.member_id=#{memberId}
        </select>
<!--        数据总数  -->
        <select id="dataCounts" resultType="java.lang.Integer">
                select  count(*)
                FROM (SELECT A.member_id,A.level_name,A.exp_demand_start,A.exp_demand_end,A.create_id,A.update_id,ANY_VALUE(C.credential_name)
                FROM (select * from member_system.member_level ) as A
                inner join member_system.member_level_m_c AS B
                on A.member_id=B.member_id
                inner join member_system.member_level_credentials AS C
                on B.credential_id=C.credential_id
                <where>
                        A.member_id like '%${keyWord}%' or
                        level_name like '%${keyWord}%' or
                        exp_demand_start like '%${keyWord}%' or
                        exp_demand_end like '%${keyWord}%' or
                        A.create_id like '%${keyWord}%' or
                        C.credential_name like '%${keyWord}%'
                </where>
                GROUP BY A.member_id) as tmp
        </select>
<!--        更新-->
        <update id="update"  parameterType="integer">
                UPDATE member_system.member_level
                <set>
                        <if test="#{levelName}!=null">
                                level_name =#{levelName},
                        </if>
                        <if test="#{expDemandStart}!=null">
                                exp_demand_start = #{expDemandStart},
                        </if>
                        <if test="#{expDemandStart}!=null">
                                exp_demand_end = #{expDemandEnd},
                        </if>
                        <if test="#{isShow}!=null">
                                is_show =  #{isShow},
                        </if>
                        <if test="#{background}!=null">
                                background = #{background},
                        </if>
                        <if test="#{avatar}!=null">
                                avatar = #{avatar},
                        </if>
                        <if test=" #{isDefault}!=null">
                                is_default = #{isDefault},
                        </if>
                        <if test="#{createId}!=null">
                                create_id= #{createId},
                        </if>
                        <if test="#{updateId}!=null">
                                update_id = #{updateId},
                        </if>
                        <if test="#{delFlag}!=null">
                                del_flag=  #{delFlag}
                        </if>
                </set>
                <where>member_id = #{memberId}</where>
        </update>
</mapper>